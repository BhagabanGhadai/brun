{"data":null,"errors":[],"level":"error","message":"jwt expired","statusCode":500,"success":false,"timestamp":"2024-02-24T07:33:21.672Z"}
{"data":null,"errors":[],"level":"error","message":"no user found","statusCode":404,"success":false,"timestamp":"2024-02-24T07:34:16.198Z"}
{"data":null,"errors":[],"level":"error","message":"no category found","statusCode":404,"success":false,"timestamp":"2024-02-24T07:45:15.301Z"}
{"data":null,"errors":[],"level":"error","message":"no subcategory found","statusCode":404,"success":false,"timestamp":"2024-02-24T07:45:53.882Z"}
{"data":null,"errors":[],"level":"error","message":"no subcategory found","statusCode":404,"success":false,"timestamp":"2024-02-24T07:46:33.053Z"}
{"data":null,"errors":[],"level":"error","message":"jwt expired","statusCode":500,"success":false,"timestamp":"2024-02-24T09:18:58.093Z"}
{"data":null,"errors":[],"level":"error","message":"req.body.name.toLowercase is not a function","statusCode":500,"success":false,"timestamp":"2024-02-24T09:19:43.794Z"}
{"data":null,"errors":[],"level":"error","message":"product.toLowerCase is not a function","statusCode":500,"success":false,"timestamp":"2024-02-24T09:30:28.614Z"}
{"data":null,"errors":[],"level":"error","message":"error while uploading image","statusCode":400,"success":false,"timestamp":"2024-02-24T09:44:44.312Z"}
{"data":null,"errors":[],"level":"error","message":"The \"path\" argument must be of type string. Received an instance of Object","statusCode":500,"success":false,"timestamp":"2024-02-24T09:59:11.578Z"}
{"data":null,"errors":[],"level":"error","message":"Invalid Signature c8ceb78737667ee21f97606f23ae587dad21167d. String to sign - 'timestamp=1708768792'.","statusCode":500,"success":false,"timestamp":"2024-02-24T09:59:54.606Z"}
{"data":null,"errors":[],"level":"error","message":"jwt expired","statusCode":500,"success":false,"timestamp":"2024-02-25T07:29:33.210Z"}
{"data":null,"errors":[],"level":"error","message":"Invalid Signature 78d2f9b3730aacaa8d9235bef24212f58c76a53b. String to sign - 'timestamp=1708847650'.","statusCode":500,"success":false,"timestamp":"2024-02-25T07:54:12.752Z"}
{"data":null,"errors":[],"level":"error","message":"jwt expired","statusCode":500,"success":false,"timestamp":"2024-02-25T08:58:01.967Z"}
{"data":null,"errors":[],"level":"error","message":"fs.createReadStream is not a function","statusCode":500,"success":false,"timestamp":"2024-02-25T09:18:28.709Z"}
{"data":null,"errors":[],"level":"error","message":"path is not defined","statusCode":500,"success":false,"timestamp":"2024-02-25T09:21:02.995Z"}
{"data":null,"errors":[],"level":"error","message":"path is not defined","statusCode":500,"success":false,"timestamp":"2024-02-25T09:21:24.398Z"}
{"data":null,"errors":[],"level":"error","message":"path is not defined","statusCode":500,"success":false,"timestamp":"2024-02-25T09:22:00.674Z"}
{"data":null,"errors":[],"level":"error","message":"path is not defined","statusCode":500,"success":false,"timestamp":"2024-02-25T09:22:18.574Z"}
{"data":null,"errors":[],"level":"error","message":"no image found","statusCode":404,"success":false,"timestamp":"2024-02-25T09:38:45.253Z"}
{"data":null,"errors":[],"level":"error","message":"cart Not Found","statusCode":404,"success":false,"timestamp":"2024-02-25T09:50:41.979Z"}
{"data":null,"errors":[],"level":"error","message":"jwt expired","statusCode":500,"success":false,"timestamp":"2024-02-25T10:02:17.400Z"}
{"data":null,"errors":[],"level":"error","message":"cart Not Found","statusCode":404,"success":false,"timestamp":"2024-02-25T10:07:01.239Z"}
{"data":null,"errors":[],"level":"error","message":"cart Not Found","statusCode":404,"success":false,"timestamp":"2024-02-25T10:07:51.971Z"}
{"data":null,"errors":[],"level":"error","message":"product remove from the cart","statusCode":404,"success":false,"timestamp":"2024-02-25T10:13:12.846Z"}
{"data":null,"errors":[],"level":"error","message":"Api not found","statusCode":404,"success":false,"timestamp":"2024-02-25T19:26:35.906Z"}
{"data":null,"errors":[],"level":"error","message":"Cannot read properties of undefined (reading 'create')","statusCode":500,"success":false,"timestamp":"2024-02-25T19:26:47.880Z"}
{"data":null,"errors":[],"level":"error","message":"Cannot read properties of undefined (reading 'create')","statusCode":500,"success":false,"timestamp":"2024-02-25T19:27:27.088Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.create()` invocation:\n\n{\n  data: {\n    coupon_code: \"NEW USER\",\n    description: \"new description\",\n    discount: 10,\n    max_discount_amount: 200,\n    total_coupons: 100,\n    validity: \"25-10-2012\",\n+   coupon_per_user: Int\n  }\n}\n\nArgument `coupon_per_user` is missing.","statusCode":500,"success":false,"timestamp":"2024-02-25T19:29:10.687Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.create()` invocation:\n\n{\n  data: {\n    coupon_code: \"NEW USER\",\n    description: \"new description\",\n    discount: 10,\n    coupon_per_user: 1,\n    max_discount_amount: 200,\n    total_coupons: 100,\n    validity: \"25-10-2012\"\n              ~~~~~~~~~~~~\n  }\n}\n\nInvalid value for argument `validity`: input contains invalid characters. Expected ISO-8601 DateTime.","statusCode":500,"success":false,"timestamp":"2024-02-25T19:29:52.993Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.create()` invocation:\n\n{\n  data: {\n    coupon_code: \"NEW USER\",\n    description: \"new description\",\n    discount: 10,\n    coupon_per_user: 1,\n    max_discount_amount: 200,\n    total_coupons: 100,\n    validity: new Date(\"Invalid Date\")\n              ~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n}\n\nInvalid value for argument `validity`: Provided Date object is invalid. Expected Date.","statusCode":500,"success":false,"timestamp":"2024-02-25T19:32:34.458Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.create()` invocation:\n\n{\n  data: {\n    coupon_code: \"NEW USER\",\n    description: \"new description\",\n    discount: 10,\n    coupon_per_user: 1,\n    max_discount_amount: 200,\n    total_coupons: 100,\n    validity: new Date(\"Invalid Date\")\n              ~~~~~~~~~~~~~~~~~~~~~~~~\n  }\n}\n\nInvalid value for argument `validity`: Provided Date object is invalid. Expected Date.","statusCode":500,"success":false,"timestamp":"2024-02-25T19:32:57.308Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.create()` invocation:\n\n{\n  data: {\n    coupon_code: \"NEW USER\",\n    description: \"new description\",\n    discount: 10,\n    coupon_per_user: 1,\n    max_discount_amount: 200,\n    total_coupons: 100,\n+   validity: DateTime\n  }\n}\n\nArgument `validity` is missing.","statusCode":500,"success":false,"timestamp":"2024-02-25T19:33:48.493Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.create()` invocation:\n\n{\n  data: {\n    coupon_code: \"NEW USER\",\n    description: \"new description\",\n    discount: 10,\n    coupon_per_user: 1,\n    max_discount_amount: 200,\n    total_coupons: 100,\n+   validity: DateTime\n  }\n}\n\nArgument `validity` is missing.","statusCode":500,"success":false,"timestamp":"2024-02-25T19:36:24.643Z"}
{"data":null,"errors":[],"level":"error","message":"Cannot set headers after they are sent to the client","statusCode":500,"success":false,"timestamp":"2024-02-25T19:37:31.731Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.create()` invocation:\n\n\nUnique constraint failed on the fields: (`coupon_code`)","statusCode":500,"success":false,"timestamp":"2024-02-25T19:37:47.770Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.create()` invocation:\n\n\nUnique constraint failed on the fields: (`coupon_code`)","statusCode":500,"success":false,"timestamp":"2024-02-25T19:39:25.345Z"}
{"data":null,"errors":[],"level":"error","message":"jwt expired","statusCode":500,"success":false,"timestamp":"2024-02-26T04:12:32.300Z"}
{"data":null,"errors":[],"level":"error","message":"coupon not found","statusCode":404,"success":false,"timestamp":"2024-02-26T04:14:21.284Z"}
{"data":null,"errors":[],"level":"error","message":"coupon not found","statusCode":404,"success":false,"timestamp":"2024-02-26T04:18:32.442Z"}
{"data":null,"errors":[],"level":"error","message":"coupon not found","statusCode":404,"success":false,"timestamp":"2024-02-26T04:19:05.722Z"}
{"data":null,"errors":[],"level":"error","message":"coupon not found","statusCode":404,"success":false,"timestamp":"2024-02-26T04:20:41.962Z"}
{"data":null,"errors":[],"level":"error","message":"coupon not found","statusCode":404,"success":false,"timestamp":"2024-02-26T04:21:21.953Z"}
{"data":null,"errors":[],"level":"error","message":"coupon not found","statusCode":404,"success":false,"timestamp":"2024-02-26T04:22:10.440Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.findUnique()` invocation:\n\n{\n  where: {\n    coupon_code: \"NEW USER\",\n?   id?: String,\n?   AND?: CouponWhereInput | CouponWhereInput[],\n?   OR?: CouponWhereInput[],\n?   NOT?: CouponWhereInput | CouponWhereInput[],\n?   description?: StringFilter | String,\n?   discount?: FloatFilter | Float,\n?   max_discount_amount?: FloatNullableFilter | Float | Null,\n?   total_coupons?: IntFilter | Int,\n?   used_coupons?: IntFilter | Int,\n?   coupon_per_user?: IntFilter | Int,\n?   validity?: DateTimeFilter | DateTime,\n?   is_published?: BoolFilter | Boolean,\n?   is_expired?: BoolFilter | Boolean,\n?   order?: OrderListRelationFilter\n  }\n}\n\nArgument `where` of type CouponWhereUniqueInput needs at least one of `id` or `id` arguments. Available options are marked with ?.","statusCode":500,"success":false,"timestamp":"2024-02-26T04:24:38.802Z"}
{"data":null,"errors":[],"level":"error","message":"coupon with this code already exists","statusCode":400,"success":false,"timestamp":"2024-02-26T04:25:03.177Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.coupon.update()` invocation:\n\n{\n  where: {\n    id: \"230bc14f-40b5-46fb-9d5b-fe9ff5f80ce6\"\n  },\n  data: {\n    coupon_code: \"HAPPY NEW YEAR\",\n    is_publihsed: true,\n    ~~~~~~~~~~~~\n?   id?: String | StringFieldUpdateOperationsInput,\n?   description?: String | StringFieldUpdateOperationsInput,\n?   discount?: Float | FloatFieldUpdateOperationsInput,\n?   max_discount_amount?: Float | NullableFloatFieldUpdateOperationsInput | Null,\n?   total_coupons?: Int | IntFieldUpdateOperationsInput,\n?   used_coupons?: Int | IntFieldUpdateOperationsInput,\n?   coupon_per_user?: Int | IntFieldUpdateOperationsInput,\n?   validity?: DateTime | DateTimeFieldUpdateOperationsInput,\n?   is_published?: Boolean | BoolFieldUpdateOperationsInput,\n?   is_expired?: Boolean | BoolFieldUpdateOperationsInput,\n?   order?: OrderUpdateManyWithoutCouponNestedInput\n  }\n}\n\nUnknown argument `is_publihsed`. Did you mean `is_published`? Available options are marked with ?.","statusCode":500,"success":false,"timestamp":"2024-02-26T04:26:50.542Z"}
{"data":null,"errors":[],"level":"error","message":"coupon not found","statusCode":404,"success":false,"timestamp":"2024-02-26T07:03:36.943Z"}
{"data":null,"errors":[],"level":"error","message":"coupon not found","statusCode":404,"success":false,"timestamp":"2024-02-26T07:04:08.731Z"}
{"data":null,"errors":[],"level":"error","message":"You can't use this coupon","statusCode":400,"success":false,"timestamp":"2024-02-26T07:04:13.673Z"}
{"data":null,"errors":[],"level":"error","message":"coupon not found","statusCode":404,"success":false,"timestamp":"2024-02-26T07:04:53.908Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.order.findUnique()` invocation:\n\n{\n  where: {\n    user_id: \"e1eb750a-1041-4a20-8f0a-fbf8b2b4008a\",\n    coupon_id: \"7d75bc0d-1a47-4c5f-861b-f26c3c3fb0b8\",\n?   id?: String,\n?   AND?: OrderWhereInput | OrderWhereInput[],\n?   OR?: OrderWhereInput[],\n?   NOT?: OrderWhereInput | OrderWhereInput[],\n?   address_id?: StringFilter | String,\n?   razorpay_order_id?: StringFilter | String,\n?   razorpay_payment_id?: StringFilter | String,\n?   razorpay_signature?: StringFilter | String,\n?   payment_time?: DateTimeFilter | DateTime,\n?   products?: JsonNullableListFilter,\n?   amount?: FloatFilter | Float,\n?   invoice_no?: StringFilter | String,\n?   status?: EnumPaymentStatusFilter | PaymentStatus,\n?   order_status?: EnumOrderStatusFilter | OrderStatus,\n?   created_at?: DateTimeFilter | DateTime,\n?   user?: UserRelationFilter | UserWhereInput,\n?   address?: AddressRelationFilter | AddressWhereInput,\n?   coupon?: CouponRelationFilter | CouponWhereInput\n  }\n}\n\nArgument `where` of type OrderWhereUniqueInput needs at least one of `id` or `id` arguments. Available options are marked with ?.","statusCode":500,"success":false,"timestamp":"2024-02-26T07:05:30.754Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.order.findUnique()` invocation:\n\n{\n  where: {\n    user_id: \"e1eb750a-1041-4a20-8f0a-fbf8b2b4008a\",\n    coupon_id: \"7d75bc0d-1a47-4c5f-861b-f26c3c3fb0b8\",\n?   id?: String,\n?   AND?: OrderWhereInput | OrderWhereInput[],\n?   OR?: OrderWhereInput[],\n?   NOT?: OrderWhereInput | OrderWhereInput[],\n?   address_id?: StringFilter | String,\n?   razorpay_order_id?: StringFilter | String,\n?   razorpay_payment_id?: StringFilter | String,\n?   razorpay_signature?: StringFilter | String,\n?   payment_time?: DateTimeFilter | DateTime,\n?   products?: JsonNullableListFilter,\n?   amount?: FloatFilter | Float,\n?   invoice_no?: StringFilter | String,\n?   status?: EnumPaymentStatusFilter | PaymentStatus,\n?   order_status?: EnumOrderStatusFilter | OrderStatus,\n?   created_at?: DateTimeFilter | DateTime,\n?   user?: UserRelationFilter | UserWhereInput,\n?   address?: AddressRelationFilter | AddressWhereInput,\n?   coupon?: CouponRelationFilter | CouponWhereInput\n  }\n}\n\nArgument `where` of type OrderWhereUniqueInput needs at least one of `id` or `id` arguments. Available options are marked with ?.","statusCode":500,"success":false,"timestamp":"2024-02-26T07:05:52.653Z"}
{"data":null,"errors":[],"level":"error","message":"Something went wrong","statusCode":400,"success":false,"timestamp":"2024-02-26T07:28:21.205Z"}
{"data":null,"errors":[],"level":"error","message":"req.body.product is not iterable","statusCode":500,"success":false,"timestamp":"2024-02-26T07:29:36.331Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    user_id: \"e1eb750a-1041-4a20-8f0a-fbf8b2b4008a\",\n    address_id: \"6e8b9c3c-cca3-4a9f-85c7-4ac202eb89aa\",\n    amount: 8791,\n    products: [\n      {\n        product_id: \"1657d662-65b7-4cf1-9771-83d428546f5c\",\n        size: \"L\",\n        colour: \"red\",\n        quantity: 2\n      }\n    ],\n    razorpay_order_id: \"order_NfQTntLHuaTyzB\",\n    invoice_no: \"BRUN/622607/2023-2024\",\n    coupon_id: \"7d75bc0d-1a47-4c5f-861b-f26c3c3fb0b8\",\n+   razorpay_payment_id: String\n  }\n}\n\nArgument `razorpay_payment_id` is missing.","statusCode":500,"success":false,"timestamp":"2024-02-26T07:29:49.604Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    user_id: \"e1eb750a-1041-4a20-8f0a-fbf8b2b4008a\",\n    address_id: \"6e8b9c3c-cca3-4a9f-85c7-4ac202eb89aa\",\n    amount: 8791,\n    products: [\n      {\n        product_id: \"1657d662-65b7-4cf1-9771-83d428546f5c\",\n        size: \"L\",\n        colour: \"red\",\n        quantity: 2\n      }\n    ],\n    razorpay_order_id: \"order_NfQV4nc7n3b6Oe\",\n    invoice_no: \"BRUN/2246356/2023-2024\",\n    coupon_id: \"7d75bc0d-1a47-4c5f-861b-f26c3c3fb0b8\",\n+   razorpay_payment_id: String\n  }\n}\n\nArgument `razorpay_payment_id` is missing.","statusCode":500,"success":false,"timestamp":"2024-02-26T07:31:01.885Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.order.create()` invocation:\n\n{\n  data: {\n    user_id: \"e1eb750a-1041-4a20-8f0a-fbf8b2b4008a\",\n    address_id: \"6e8b9c3c-cca3-4a9f-85c7-4ac202eb89aa\",\n    amount: 8791,\n    products: [\n      {\n        product_id: \"1657d662-65b7-4cf1-9771-83d428546f5c\",\n        size: \"L\",\n        colour: \"red\",\n        quantity: 2\n      }\n    ],\n    razorpay_order_id: \"order_NfQVogGNs9stV8\",\n    invoice_no: \"BRUN/8099822/2023-2024\",\n    coupon_id: \"7d75bc0d-1a47-4c5f-861b-f26c3c3fb0b8\",\n+   razorpay_payment_id: String\n  }\n}\n\nArgument `razorpay_payment_id` is missing.","statusCode":500,"success":false,"timestamp":"2024-02-26T07:31:43.912Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.order.findMany()` invocation:\n\n{\n  include: {\n    user: {\n      select: {\n        first_name: true,\n        last_name: true,\n        email: true\n      }\n    },\n    coupon: {\n      coupon_code: true,\n      ~~~~~~~~~~~\n?     where?: CouponWhereInput\n    },\n    address: true\n  },\n  where: {}\n}\n\nUnknown argument `coupon_code`. Available options are marked with ?.","statusCode":500,"success":false,"timestamp":"2024-02-26T07:44:44.005Z"}
{"data":null,"errors":[],"level":"error","message":"invalid request body","statusCode":400,"success":false,"timestamp":"2024-02-26T07:48:44.777Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.order.update()` invocation:\n\n{\n  where: {\n    razorpay_order_id: \"order_NfQW6gn2IEYOkn\",\n?   id?: String,\n?   AND?: OrderWhereInput | OrderWhereInput[],\n?   OR?: OrderWhereInput[],\n?   NOT?: OrderWhereInput | OrderWhereInput[],\n?   user_id?: StringFilter | String,\n?   address_id?: StringFilter | String,\n?   razorpay_payment_id?: StringNullableFilter | String | Null,\n?   razorpay_signature?: StringNullableFilter | String | Null,\n?   payment_time?: DateTimeNullableFilter | DateTime | Null,\n?   products?: JsonNullableListFilter,\n?   amount?: FloatFilter | Float,\n?   coupon_id?: StringNullableFilter | String | Null,\n?   invoice_no?: StringFilter | String,\n?   status?: EnumPaymentStatusFilter | PaymentStatus,\n?   order_status?: EnumOrderStatusFilter | OrderStatus,\n?   created_at?: DateTimeFilter | DateTime,\n?   user?: UserRelationFilter | UserWhereInput,\n?   address?: AddressRelationFilter | AddressWhereInput,\n?   coupon?: CouponNullableRelationFilter | CouponWhereInput | Null\n  },\n  data: {\n    status: \"failed\",\n    order_status: \"Cancelled\"\n  }\n}\n\nArgument `where` of type OrderWhereUniqueInput needs at least one of `id` or `id` arguments. Available options are marked with ?.","statusCode":500,"success":false,"timestamp":"2024-02-26T07:50:16.420Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.order.findUnique()` invocation:\n\n{\n  where: {\n    razorpay_order_id: \"order_NfQW6gn2IEYOkn\",\n?   id?: String,\n?   AND?: OrderWhereInput | OrderWhereInput[],\n?   OR?: OrderWhereInput[],\n?   NOT?: OrderWhereInput | OrderWhereInput[],\n?   user_id?: StringFilter | String,\n?   address_id?: StringFilter | String,\n?   razorpay_payment_id?: StringNullableFilter | String | Null,\n?   razorpay_signature?: StringNullableFilter | String | Null,\n?   payment_time?: DateTimeNullableFilter | DateTime | Null,\n?   products?: JsonNullableListFilter,\n?   amount?: FloatFilter | Float,\n?   coupon_id?: StringNullableFilter | String | Null,\n?   invoice_no?: StringFilter | String,\n?   status?: EnumPaymentStatusFilter | PaymentStatus,\n?   order_status?: EnumOrderStatusFilter | OrderStatus,\n?   created_at?: DateTimeFilter | DateTime,\n?   user?: UserRelationFilter | UserWhereInput,\n?   address?: AddressRelationFilter | AddressWhereInput,\n?   coupon?: CouponNullableRelationFilter | CouponWhereInput | Null\n  }\n}\n\nArgument `where` of type OrderWhereUniqueInput needs at least one of `id` or `id` arguments. Available options are marked with ?.","statusCode":500,"success":false,"timestamp":"2024-02-26T07:53:48.443Z"}
{"data":null,"errors":[],"level":"error","message":"order details not found","statusCode":400,"success":false,"timestamp":"2024-02-26T07:58:59.086Z"}
{"data":null,"errors":[],"level":"error","message":"can't perform this action","statusCode":400,"success":false,"timestamp":"2024-02-26T07:59:46.653Z"}
{"data":null,"errors":[],"level":"error","message":"can't perform this action","statusCode":403,"success":false,"timestamp":"2024-02-26T08:00:06.348Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  include: {\n  ~~~~~~~\n    image: true,\n    category: true,\n    subcategory: true\n  },\n  select: {\n  ~~~~~~\n    colours: false,\n    sizes: false,\n    description: false,\n    subcategory: false,\n    category: false,\n    subcategory_id: false,\n    category_id: false,\n    is_featured: false,\n    out_of_stock: false,\n    is_published: false\n  },\n  skip: 0,\n  take: 10\n}\n\nPlease either use `include` or `select`, but not both at the same time.","statusCode":500,"success":false,"timestamp":"2024-03-06T17:28:06.008Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  include: {\n  ~~~~~~~\n    image: true,\n    category: true,\n    subcategory: true\n  },\n  select: {\n  ~~~~~~\n    colours: false,\n    sizes: false,\n    description: false,\n    subcategory: false,\n    category_id: false,\n    is_featured: false,\n    out_of_stock: false,\n    is_published: false\n  },\n  skip: 0,\n  take: 10\n}\n\nPlease either use `include` or `select`, but not both at the same time.","statusCode":500,"success":false,"timestamp":"2024-03-06T17:29:12.771Z"}
{"data":null,"errors":[],"level":"error","message":"\nInvalid `prisma.product.findMany()` invocation:\n\n{\n  include: {\n  ~~~~~~~\n    image: true,\n    category: true,\n    subcategory: true\n  },\n  select: {\n  ~~~~~~\n    name: true,\n    slug: true,\n    price: true,\n    image: true\n  },\n  skip: 0,\n  take: 10\n}\n\nPlease either use `include` or `select`, but not both at the same time.","statusCode":500,"success":false,"timestamp":"2024-03-06T18:04:52.655Z"}
